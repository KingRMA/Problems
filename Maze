#include <bits/stdc++.h>
using namespace std;

vector<pair<int, int>> dir = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
vector<vector<bool>> vis;
vector<string> grid;
int n, m, k;

void dfs(int x, int y) 
{
    vis[x][y] = true;
    for (auto &d : dir) 
    {
        int nx = x + d.first, ny = y + d.second;
        if (nx >= 0 && nx < n && ny >= 0 && ny < m && grid[nx][ny] == '.' && !vis[nx][ny])  dfs(nx, ny);
        
    }
    if (k > 0)
    {
        grid[x][y] = 'X';
        k--;
    }
}

int main()
{
    cin >> n >> m >> k;
    grid.resize(n);
    vis.resize(n, vector<bool>(m));
    for (int i = 0; i < n; ++i) cin >> grid[i];


    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            if (grid[i][j] == '.' && !vis[i][j])
            {
                dfs(i, j);
            }
        }
    }

    for (int i = 0; i < n; ++i) cout << grid[i] << "\n";


    return 0;
}
