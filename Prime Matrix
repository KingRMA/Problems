#include<bits/stdc++.h>
typedef long long ll;
using namespace std;

const int N = 1e6+9;


vector<int>primes;
void sieve()
{
    vector<int> isPrime(N, 1);
    isPrime[0] = isPrime[1] = 0;

    for(int i = 2; i*i < N; i++)   if(isPrime[i])  for(int j = i*i; j < N; j += i) isPrime[j] = 0;
    for(int i = 2; i < N; i++)  if(isPrime[i])  primes.push_back(i);
}
int main()
{
    sieve();
    int n, m, res = INT_MAX;
    cin >> n >> m;
    vector<vector<int>> grid(n, vector<int>(m));
    for(int i = 0; i < n; i++)
    {
        int temp = 0;
        for(int j = 0; j < m; j++)
        {
            cin >> grid[i][j];
            int nxtPrime = *lower_bound(primes.begin(), primes.end(), grid[i][j]);
            temp += (nxtPrime-grid[i][j]);
        }
        if(temp < res) res = temp;
    }
    for(int j = 0; j < m; j++)
    {
        int temp = 0;
        for(int i = 0; i < n; i++)
        {
            int nxtPrime = *lower_bound(primes.begin(), primes.end(), grid[i][j]);
            temp += (nxtPrime-grid[i][j]);
        }
        if(temp < res) res = temp;
    }
    cout << res <<'\n';

    return 0;
}
