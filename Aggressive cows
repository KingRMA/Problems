#include <bits/stdc++.h>
typedef long long ll;
using namespace std;

using namespace std;

bool check(const vector<int>& v, int n, int distance) 
{
    int done = 1;
    int lastPos = v[0];

    for (int i = 1; i < v.size(); ++i) 
    {
        if (v[i] - lastPos >= distance) 
        {
            done++;
            lastPos = v[i];
            if (done == n)   return true;
        }
    }
    return false;
}

int solve(const vector<int>& v, int n) 
{
    int l = 1, r = v.back() - v.front(), res = -1;

    while (l <= r) 
    {
        int mid = l + (r - l) / 2;
        if (check(v, n, mid)) 
        {
            res = mid;
            l = mid + 1;
        } 
        else  r = mid - 1;
        
    }

    return res;
}

int main() 
{
    int t;
    cin >> t;

    while (t--)
    {
        int n, c;
        cin >> n >> c;

        vector<int> v(n);
        for (int i = 0; i < n; ++i)  cin >> v[i];

        sort(v.begin(), v.end());

        int res = solve(v, c);
        cout << res << endl;
    }

    return 0;
}
