#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> res;
void dfs(int u, vector<bool>& vis, vector<vector<int>>& adj)
{
    vis[u] = true;
    for (auto v : adj[u])   if (!vis[v])    dfs(v, vis, adj);
    res.push_back(u);
}

int main()
{
    int n, m;
    while (cin >> n >> m && (n || m))
    
    {
        vector<vector<int>> adj(n);
        vector<bool> vis(n, false);

        for (int i = 0; i < m; ++i)
        {
            int u, v;
            cin >> u >> v;
            adj[u - 1].push_back(v - 1);
        }

        for (int i = 0; i < n; ++i) if (!vis[i])    dfs(i, vis, adj);
        reverse(res.begin(), res.end());

        for (auto i : res)  cout << i + 1 << " ";

        cout << "\n";
        res.clear();
    }

    return 0;
}
