#include<bits/stdc++.h>
using namespace std;

const int N = 2e5+9;
vector<int> adj[N];
int color[N];

void dfs(int v, int p, int c1, int c2) 
{
    int c = 1;
    for (int u : adj[v]) 
    {
        if (u == p) continue;
        while (c == c1 || c == c2) c++;
        color[u] = c;
        dfs(u, v, c2, c);
        c++;
    }
}

int main() 
{
    ios::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    int n;
    cin >> n;
    for (int i = 0; i < n-1; i++) 
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    color[1] = 1;
    dfs(1, 0, 0, 1);

    int mx = *max_element(color+1, color+n+1);
    cout << mx << "\n";
    
    for (int i = 1; i <= n; i++)    cout << color[i] << " ";
    cout << "\n";
    
    
    return 0;
}
