#include <bits/stdc++.h>
typedef long long ll;
using namespace std;

const int OO = 99999999;

void bfs(int src, vector<vector<int>>&adj, vector<bool>&vis, vector<int>&dist)
{
    queue <int> q;
    q.push(src);
    dist[src] = 0;
    while(!q.empty())
    {
        int u = q.front();
        q.pop();
        for(int v : adj[u])
        {
            if(dist[v] == OO)
            {
                dist[v] = dist[u] + 1;
                q.push(v);
            }
        }
    }
}

int main()
{

    int t;
    cin >> t;

    while(t--)
    {
        int n, m;
        cin >> n >> m;

        vector<vector<int>> adj(n);
        for (int i = 0; i < m; ++i)
        {
            int temp1, temp2;
            cin >> temp1 >> temp2;
            adj[temp1 - 1].push_back(temp2 - 1);
            adj[temp2 - 1].push_back(temp1 - 1);
        }
        vector<bool> vis(n, false);
        vector<int> dist(n, OO);

        int start;
        cin >> start;

        vis[start-1] = true;

        bfs(start-1, adj, vis, dist);

        for (int i = 0; i < n; ++i)
        {
            if(dist[i] == OO) cout << -1 << " ";
            else if(i != start-1) cout << dist[i] * 6 << " ";
        }
        cout << "\n";





    }




    return 0;
}
/*
1
5 3
 1 2
1 3
 3 4
 1

 */
