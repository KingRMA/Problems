#include <bits/stdc++.h>
typedef long long ll;
using namespace std;

void dfs(int u, int p, int o, int e, vector<int>&cur, vector<int>&target, vector<int>&res, vector<vector<int>>&adj)
{
    if((cur[u]^o) != target[u]) res.push_back(u+1), o^=1;
    for(int v:adj[u])  if(v != p)    dfs(v, u, e, o, cur, target, res, adj);
}

int main()
{
    int n;
    cin >> n;
    vector<vector<int>> adj(n);
    for(int i = 1; i < n; i++)
    {
        int u, v;
        cin >> u >> v;
        adj[--u].push_back(--v);
        adj[v].push_back(u);
    }
    vector<int>cur(n), target(n), res;

    for (int i = 0; i < n; ++i) cin >> cur[i];
    for (int i = 0; i < n; ++i) cin >> target[i];
    
    dfs(0, -1, 0, 0, cur, target, res, adj);
    cout << res.size() << "\n";
    for(auto i:res) cout << i << "\n";

    return 0;

    //heavily inspired by our coach :)
}
